/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/index",{

/***/ "./public/data.json":
/*!**************************!*\
  !*** ./public/data.json ***!
  \**************************/
/***/ (function(module) {

"use strict";
module.exports = JSON.parse('{"aboutme":{"title":"about me","content":"I am a CSE undergrad at BMSIT&M, Bangalore, batch of 2022. I live in Bangalore, India. I like to work with TS, JS and it\'s various frameworks. Python is my 2nd language of choice. This website shows my contact details, past experience along with some of the projects that I have worked on."},"experience":{"title":"experience","items":[{"title":{"content":"DAPHNIS LABS"},"role":"Full Stack Intern","time":"07/2020 – 08/2020","items":["Developed Production Ready APIs and Admin Panels","Service handles thousands of live users","Worked with Selenium, AWS, PostgreSQL, NodeJS"]},{"title":{"content":"IBM (GRM)"},"role":"Research Intern","time":"04/2020 – 07/2020","items":["Developed RESTful APIs for Industrial scale ML Pipeline","Automated cleaning & transormation of raw data","Visualized change in accuracy of data after transformation on standard models"]},{"title":{"content":"URBANSTOP STUDIOS"},"role":"Backend Intern","time":"11/2019 – 12/2019","items":["Deployed RESTful APIs on the Firebase ecosystem","Learned skills like time management and being a team player"]}]},"projects":{"title":"projects","items":[{"title":{"content":"URL shortener microservice","url":"http://eb1-env.eba-np965qgi.us-east-2.elasticbeanstalk.com/"},"tags":["NodeJS","AWS","CI/CD","MongoDB","Redis","Microservices"],"content":"A link shortening microservice deployed on AWS elastic beanstalk using Github actions CI. It uses MongoDB as document store and Redis as caching layer."},{"title":{"content":"Workout Assistance using Pose Estimation & CNNs","url":"https://github.com/tusharpandey13/pose_cnn_workout_assistance"},"tags":["Keras","TensorFlow","MediaPipe","Python"],"content":"A workout assistant that counts the reps of various workouts in realtime using pose-estimation. A convolutional neural network is trained on pose data of selected workouts in their respective end-states. It is used to classify pose data from live webcam feed and thus, count individual reps."},{"title":{"content":"express-mongosoe-boilerplate","url":"https://github.com/tusharpandey13/express-mongoose-boilerplate"},"tags":["NodeJS","ExpressJS","MongoDB","Redis","Boilerplate","ES6"],"content":"A clean, opinionated NodeJS server boilerplate that uses ExpressJS as server backend, MongoDB as document store and Redis as session store. Features ​Three-layer architecture​, extensive logging capabilities, ​multi-agent authentication support​, simplified , ​Socket.IO support​ and ​modular design."},{"title":{"content":"Graph pathfinding on the London Metro","url":"https://github.com/tusharpandey13/dijkstra_london_tube"},"tags":["Pandas","Flask","P5.JS","Dijkstra","Graph"],"content":"An interactive visualisation for using ​Dijkstra\'s algorithm​ to find the shortest path between stations in the London underground. Made using HTML5, CSS for frontend and a Flask server written in Python for backend."},{"title":{"content":"Titanic survival prediction","url":"https://colab.research.google.com/drive/101I_iZYOSyKWZ8mdVoeLOAcFyFMjuNx2#scrollTo=cMLDx-337Rm7"},"tags":["Keras","Pandas","Numpy"],"content":"Worked on the titanic dataset to predict survival of passengers. Employed data cleaning, pre-processing, imputation, feature engineering and vizualization on the standard titanic dataset availiable on Kaggle and predicted the survival of female passengers with an accuracy of 86%."},{"title":{"content":"Handwriter","url":"https://github.com/tusharpandey13/HandWriter"},"tags":["React","KonvaJS","React-hooks"],"content":"An interactive tool to easily convert digital text into handwriting by using the HTML canvas element. The project was made using ReactJS. Used ​React Hooks​ for state management and component lifecycle management."}],"unneeded":[{"title":{"content":"totoro-node","url":"https://github.com/VGJohn/totoro"},"tags":["npm","package","NodeJS","ExpressJS"],"content":"Node.js API Versioning Helper Module"},{"title":{"content":"portfolio-site","url":"https://github.com/tusharpandey13/portfolio-site"},"tags":["ReactJS","NodeJS","SCSS","Create-React-App","gh-pages"],"content":"My portfolio website source created in React and SCSS"},{"title":{"content":"Webrtc OpenCV.JS Demo","url":"https://github.com/tusharpandey13/webrtc_opencvjs_demo"},"tags":["Python","Flask","OpenCV","JS"],"content":"Using opencv.js with webrtc to detect faces"},{"title":{"content":"Interesting Wikis Bot","url":"https://github.com/tusharpandey13/interestingwikisbot"},"tags":["Python","Bot","Twitter","Wikipedia","Reddit"],"content":"A twitter bot made in python that tweets the top post(sorted by hot) on /r/wikipedia every 30 mins"}]},"talks":{"title":"talks and seminars","items":[{"title":{"content":"Web APIs and JSON","url":"https://www.youtube.com/watch?v=AV-491rIPxg"},"role":"Youtube","time":"Jun 23, 2020"},{"title":{"content":"Introduction to Open Source"},"time":"Nov 9, 2020"}]},"links":{"github":"https://github.com/tusharpandey13","linkedin":"https://www.linkedin.com/in/tusharpandey13","email":"mailto:tusharpandey13@gmail.com","resume":"https://drive.google.com/file/d/1bRdL3Hm57egBwRCgLPHnV8sIPtn4_2GA/view?usp=sharing","twitter":"https://twitter.com/_tusharpandey13/","ig":"https://www.instagram.com/tusharpandey13/"}}');

/***/ })

});